# Generated by Django 4.2 on 2023-05-25 16:28

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Korisnik',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('jmbg', models.CharField(db_column='JMBG', max_length=13)),
                ('pol', models.CharField(db_column='Pol', max_length=1)),
                ('brtelefona', models.CharField(db_column='BrTelefona', max_length=45)),
                ('pfp', models.ImageField(null=True, upload_to='imgs/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'korisnik',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Ordinacija',
            fields=[
                ('idordinacija', models.AutoField(db_column='idOrdinacija', primary_key=True, serialize=False)),
                ('naziv', models.CharField(db_column='Naziv', max_length=40)),
                ('mesto', models.CharField(db_column='Mesto', max_length=40)),
                ('adresa', models.CharField(db_column='Adresa', max_length=40)),
                ('brtelefona', models.CharField(db_column='BrTelefona', max_length=20)),
                ('pfp', models.ImageField(null=True, upload_to='imgs/')),
            ],
            options={
                'db_table': 'ordinacija',
            },
        ),
        migrations.CreateModel(
            name='Usluga',
            fields=[
                ('idusl', models.AutoField(db_column='idUsl', primary_key=True, serialize=False)),
                ('naziv', models.CharField(db_column='Naziv', max_length=20)),
                ('cena', models.IntegerField(db_column='Cena')),
                ('opis', models.CharField(db_column='Opis', max_length=300)),
            ],
            options={
                'db_table': 'usluga',
            },
        ),
        migrations.CreateModel(
            name='Admninistrator',
            fields=[
                ('idadmin', models.OneToOneField(db_column='idAdmin', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'admninistrator',
            },
        ),
        migrations.CreateModel(
            name='Pacijent',
            fields=[
                ('idpac', models.OneToOneField(db_column='idPac', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'pacijent',
            },
        ),
        migrations.CreateModel(
            name='Stomatolog',
            fields=[
                ('idsto', models.OneToOneField(db_column='idSto', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('biografija', models.CharField(db_column='Biografija', max_length=300)),
                ('ordinacija', models.ForeignKey(db_column='Ordinacija', on_delete=django.db.models.deletion.DO_NOTHING, to='osmeh.ordinacija')),
            ],
            options={
                'db_table': 'stomatolog',
            },
        ),
        migrations.CreateModel(
            name='Rezervacija',
            fields=[
                ('idrez', models.AutoField(db_column='idRez', primary_key=True, serialize=False)),
                ('datum', models.DateTimeField(db_column='Datum')),
                ('vreme', models.IntegerField(db_column='Vreme')),
                ('status', models.CharField(db_column='Status', max_length=10)),
                ('ordinacijarez', models.ForeignKey(db_column='OrdinacijaRez', on_delete=django.db.models.deletion.DO_NOTHING, to='osmeh.ordinacija')),
                ('usluga', models.ForeignKey(db_column='Usluga', on_delete=django.db.models.deletion.DO_NOTHING, to='osmeh.usluga')),
                ('pacijent', models.ForeignKey(db_column='Pacijent', on_delete=django.db.models.deletion.DO_NOTHING, to='osmeh.pacijent')),
                ('stomatolog', models.ForeignKey(db_column='Stomatolog', on_delete=django.db.models.deletion.DO_NOTHING, to='osmeh.stomatolog')),
            ],
            options={
                'db_table': 'rezervacija',
            },
        ),
    ]
